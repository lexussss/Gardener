{{- define "node-local-dns.daemonset.annotations" -}}
reference.resources.gardener.cloud/configmap-{{ include "node-local-dns.config.name" . | sha256sum | trunc 8 }}: {{ include "node-local-dns.config.name" . }}
{{- end -}}
---
apiVersion: {{ include "daemonsetversion" . }}
kind: DaemonSet
metadata:
  name: node-local-dns
  namespace: kube-system
  labels:
    gardener.cloud/role: system-component
    origin: gardener
    k8s-app: node-local-dns
  annotations:
{{ include "node-local-dns.daemonset.annotations" . | indent 4 }}
spec:
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
  selector:
    matchLabels:
      k8s-app: node-local-dns
  template:
    metadata:
      labels:
        k8s-app: node-local-dns
        networking.gardener.cloud/to-dns: allowed
      annotations:
{{ include "node-local-dns.daemonset.annotations" . | indent 8 }}
        prometheus.io/port: "{{ .Values.prometheus.port }}"
        prometheus.io/scrape: "{{ .Values.prometheus.scrape }}"
    spec:
      priorityClassName: system-node-critical
      serviceAccountName: node-local-dns
      hostNetwork: true
      dnsPolicy: Default  # Don't use cluster DNS.
      tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
      containers:
        - name: node-cache
          image: {{ index .Values.images "node-local-dns" }}
          resources:
            requests:
              cpu: 25m
              memory: 25Mi
            limits:
              cpu: 100m
              memory: 100Mi
          args:
          - -localip
          {{- if .Values.dnsServer }}
          - "{{ .Values.nodeLocal }},{{ .Values.dnsServer }}"
          {{- else }}
          - "{{ .Values.nodeLocal }}"
          {{- end }}
          - -conf
          - "/etc/Corefile"
          - -upstreamsvc
          - kube-dns-upstream
          securityContext:
            privileged: true
          ports:
            - containerPort: 53
              name: dns
              protocol: UDP
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: {{ .Values.prometheus.port }}
              name: metrics
              protocol: TCP
          livenessProbe:
            httpGet:
              host: {{ .Values.nodeLocal }}
              path: /health
              port: 8080
            initialDelaySeconds: 60
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /run/xtables.lock
              name: xtables-lock
              readOnly: false
            - name: config-volume
              mountPath: /etc/coredns
            - name: kube-dns-config
              mountPath: /etc/kube-dns
      volumes:
        - name: xtables-lock
          hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
        - name: kube-dns-config
          configMap:
            name: kube-dns
            optional: true
        - name: config-volume
          configMap:
            name: {{ include "node-local-dns.config.name" . }}
            items:
              - key: Corefile
                path: Corefile.base
