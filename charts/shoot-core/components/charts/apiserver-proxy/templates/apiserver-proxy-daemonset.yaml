{{- define "apiserver-proxy.daemonset.annotations" -}}
reference.resources.gardener.cloud/configmap-{{ include "apiserver-proxy.config.name" . | sha256sum | trunc 8 }}: {{ include "apiserver-proxy.config.name" . }}
{{- end -}}
---
apiVersion: {{ include "daemonsetversion" . }}
kind: DaemonSet
metadata:
  name: apiserver-proxy
  namespace: kube-system
  labels:
    gardener.cloud/role: system-component
    origin: gardener
  annotations:
{{ include "apiserver-proxy.daemonset.annotations" . | indent 4 }}
spec:
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: kubernetes
      role: apiserver-proxy
  template:
    metadata:
      annotations:
{{ include "apiserver-proxy.daemonset.annotations" . | indent 8 }}
        checksum/psp: {{ include ( print $.Template.BasePath "/psp/apiserver-proxy-psp.yaml") . | sha256sum }}
      labels:
        gardener.cloud/role: system-component
        origin: gardener
        app: kubernetes
        role: apiserver-proxy
        networking.gardener.cloud/to-dns: allowed
        networking.gardener.cloud/to-apiserver: allowed
        networking.gardener.cloud/from-seed: allowed
    spec:
      serviceAccountName: apiserver-proxy
      priorityClassName: system-node-critical
      tolerations:
      - effect: NoSchedule
        operator: Exists
      - key: CriticalAddonsOnly
        operator: Exists
      - effect: NoExecute
        operator: Exists
      hostNetwork: true
      automountServiceAccountToken: false
      initContainers:
      - name: setup
        image: {{ index .Values.images "apiserver-proxy-sidecar" }}
        imagePullPolicy: IfNotPresent
        args:
        - --ip-address={{ .Values.advertiseIPAddress }}
        - --setup-iptables=false
        - --daemon=false
        - --interface=lo
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        resources:
          requests:
            cpu: 20m
            memory: 20Mi
          limits:
            cpu: 200m
            memory: 200Mi
      containers:
      - name: sidecar
        image: {{ index .Values.images "apiserver-proxy-sidecar" }}
        imagePullPolicy: IfNotPresent
        args:
        - --ip-address={{ .Values.advertiseIPAddress }}
        - --setup-iptables=false
        - --interface=lo
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        resources:
          requests:
            cpu: 20m
            memory: 20Mi
          limits:
            cpu: 200m
            memory: 200Mi
      - name: proxy
        image: {{ index .Values.images "apiserver-proxy" }}
        imagePullPolicy: IfNotPresent
        command:
        - envoy
        - --concurrency
        - "2"
        - -c
        - /etc/apiserver-proxy/envoy.yaml
        securityContext:
          capabilities:
            add:
            - NET_BIND_SERVICE
        resources:
          requests:
            cpu: 20m
            memory: 20Mi
          limits:
            cpu: 200m
            memory: 300Mi
        readinessProbe:
          httpGet:
            path: /ready
            port: {{ .Values.adminPort }}
          initialDelaySeconds: 1
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        ports:
        - name: metrics
          containerPort: {{ .Values.adminPort }}
          hostPort: {{ .Values.adminPort }}
        volumeMounts:
        - name: proxy-config
          mountPath: /etc/apiserver-proxy
        - name: admin-uds
          mountPath: /etc/admin-uds
      volumes:
      - name: proxy-config
        configMap:
          name: {{ include "apiserver-proxy.config.name" . }}
      - name: admin-uds
        emptyDir: {}
